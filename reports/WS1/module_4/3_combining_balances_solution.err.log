Traceback (most recent call last):
  File "C:\Users\arnaou\AppData\Local\miniconda3\envs\dig4bio\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\arnaou\AppData\Local\miniconda3\envs\dig4bio\Lib\site-packages\nbclient\client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arnaou\AppData\Local\miniconda3\envs\dig4bio\Lib\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arnaou\AppData\Local\miniconda3\envs\dig4bio\Lib\asyncio\base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\arnaou\AppData\Local\miniconda3\envs\dig4bio\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\arnaou\AppData\Local\miniconda3\envs\dig4bio\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\arnaou\AppData\Local\miniconda3\envs\dig4bio\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import math
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import solve_ivp
#SI-units are used through the entire assigment
HA_298 = -622960
HB_298 = -380450
CA0 = 15
h1 = 0.05
h2 = 0.05
R_sphere = 0.1
E = 25000
R = 8.314
CPliq = 77
MWA = 0.28534
U1 = 40000
U2 = 5000
Ntot0 = 140
T0 = 298
k_298 = 0.005/60
#Volume of reactor is calculated:
V_reactor = 4/3*math.pi*R_sphere**3
#Half the reactor is filled with liquid, so:
V = 0.5*V_reactor
#From this the initial amount of A is found:
NA0 = CA0*V/MWA
print(NA0)
#NA0=52.5688
#A Stoiciometric table is made for the reaction
species = ["A","B", "I"]
start = ["N_{A0}", "0", "N_{I0}"]
coefficients = ["-1","1", "0"]
change = ["$$"+n+"* N_{A0}* X$$" for n in coefficients]
# If the start concentration is zero, the end flow is the same as the change in flow:
def endf(start,change,species,coefficients):
    end = [None] * len(start)
    for i in range(0,len(start)):
        if start[i] == "0":
            end[i] = change[i]
# If this is not the case, the end flow is the difference between start and change (were Theta_J = F_J0/F_A0)
        else:
            end[i] = "$$N_{A0}*(\u03F4_"+species[i]+"+"+"("+coefficients[i]+"* X))$$"
    return(end)
end = endf(start,change,species,coefficients)
#The stoichiometric table is setup in a pandas data frame
stoictable = pd.DataFrame(data={"Start":["$$"+i+"$$" for i in start], "Change":change, "End":end},  index=species)
stoictable
------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [1;32mIn[1], line 2[0m
[0;32m      1[0m [38;5;28;01mimport[39;00m [38;5;21;01mmath[39;00m
[1;32m----> 2[0m [38;5;28;01mimport[39;00m [38;5;21;01mpandas[39;00m [38;5;28;01mas[39;00m [38;5;21;01mpd[39;00m
[0;32m      3[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m
[0;32m      4[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m [38;5;28;01mas[39;00m [38;5;21;01mplt[39;00m

[1;31mModuleNotFoundError[0m: No module named 'pandas'

